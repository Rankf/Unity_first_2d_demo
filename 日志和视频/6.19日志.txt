1.通过create empty objects （空结构体） 管理同类预制体 例如banana  spike

2.通过创建路径点，再设计C#逻辑根据路径点往复循环移动 赋予platform 实现platform往返移动：
	1.路近点如何构造：通过创建empty object(空物体) 右上角赋予颜色改成路径点(游戏里看不到 因为空 )  和 把C#逻辑赋予 platform 外部接受int[] points 数组 通过增加Element 把empty object 赋予 给与points 位置

3. 如何让player 跟着踏板一起移动
	类似carmera 绑定player 在player 碰到踏板时候 让player 成为踏板子类 同步移动 离开时候 在解除子类绑定 
	因为是Tigger判断 所以要再添加一个box Collider 2D 进行tigger
	 (为什么要2个box Collider 因为先前 box Cllider Used one way  作为碰撞体 和 trigger冲突，再添加一个相当于2个独立判断？可以解决冲突)
	触发器与碰撞检测的区别 ：在 Unity 中，“Is Trigger”选项决定了 Collider 组件是用于触发事件还是用于物理碰撞检测。
	当“Is Trigger”被勾选时，Collider 会用于触发事件（如 OnTriggerEnter2D、OnTriggerExit2D 等），而不是用于物理碰撞检测。
	而 PlatformEffector2D组件是设计用来与物理碰撞系统交互的，它依赖于 Collider 进行正常的碰撞检测来实现其功能，例如对平台上的角色施加力等效果。